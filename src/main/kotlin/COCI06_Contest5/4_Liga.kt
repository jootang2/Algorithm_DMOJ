package COCI06_Contest5

/**
 * https://dmoj.ca/problem/coci06c5p4
 *
 * 문제
 *
 * 게임을 진행한 횟수 , 이긴 횟수, 비긴 횟수, 진 횟수, 총 얻은 포인트
 *
 * 이김 : 3점
 * 비김 : 1점
 *
 * 각 팀들은 연관이 없음
 *
 *
 * input
 * 첫째 줄 : N : 팀의 수
 *
 * output
 * ?을 채운 결과값
 *
 * 풀이
 *
 * G:게임을 진행한 횟수 , W:이긴 횟수, D:비긴 횟수, L:진 횟수, P:총 얻은 포인트
 *
 * G = W + D + L
 * W = G - D - L
 * D = G - W - L
 * L = G - W - D
 * P = 3 * W + D
 *
 * 1. ?인 점수는 0으로 변환
 * 2. ...
 *
 *
 * 0. ?를 채우는 방법은 한가지 뿐
 * 1. 총 경기수의 최댓값은 100
 *
 * 2. 총 경기수가 주어진 경우, 승점이 주어진 경우
 * => 승이 주어진 경우 => 총 경기수를 이용해서 패 + 무의 수를 구하고, 승점-3*승 으로 패의 경기수를 구함, 무의 수를 구함
 * => 패가 주어진 경우 => 승의 횟수 : 승점 / 3 , 패의 횟수 : 승점 - 3 * 승  : 방법은 유일하기 때문에 무방할듯...?
 *
 * 3. 총 경기수가 주어진 경우, 승점이 주어지지않은 경우
 * => 승, 무, 패 중 하나가 주어지지않은 경우 : 총 경기수 - 주어진 경기의 수 로 구함 => 승점 구함
 * => 승, 무, 패 모두 주어진 경우 => 승점 구함
 *
 * 4. 총 경기수가 주어지지않은 경우, 승점이 주어진 경우
 * => 최대 경기수가 100 경기 이므로 승 무 패 모두 주어지지않을 수도 있음
 * => 모두 주어지지않은 경우에 나올 유일한 답을 찾음
 * => 승이 주어지지 않은 경우 : 승점으로 승의 횟수를 구하고 총 경기수를 구함
 * => 무가 주어지지 않은 경우 : 승점으로 무의 횟수를 구하고 총 경기수를 구함
 * => 패가 주어지지 않은 경우 : 이 경우에는 유일하지 않기 때문에 주어지지 않을것...?
 *
 * 5. 총 경기수가 주어지지않은 경우, 승점이 주어지지 않은 경우 => 승무패는 무조건 주어짐 => 승+무+패 : 총 경기수 , 승 * 3 + 무 : 승점
 *
 *
 * */

fun main() {
    /**1. 팀 수 입력*/
    val N = readln().toIntOrNull()?:throw Throwable("invalid input - int")

    var result = ""

    val questionList = mutableListOf<Int>()
    /**2. N개의 팀만큼 반복*/
    for(i in 0 until N) {
        val input = readln()

        /**3. ?인 점수는 0으로 변환*/
        val (G, W, D, L, P)
            = input.split(" ").map { if (it == "?") 0 else it.toIntOrNull() ?: throw Throwable("invalid input - int") }
        result += "$G $W $D $L $P\n"
//        result += "$resultG $W $D $L $P\n"
    }
    println(result)
}